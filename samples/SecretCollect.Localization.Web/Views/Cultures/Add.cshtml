@model SecretCollect.Localization.Web.Models.CultureVM
@inject IViewLocalizer localizer
@{
    ViewData["Title"] = localizer["ADD_NEW_CULTURE"];
}

@if (Model.SaveResult != SaveResult.None)
{
    switch (Model.SaveResult)
    {
        case SaveResult.Success:
            <div class="alert alert-success" role="alert"> <strong>@localizer["SUCCESS_HEADER"]</strong> @localizer["SUCCESS_MSG"]</div>
            break;
        case SaveResult.Duplicate:
            <div class="alert alert-warning" role="alert"> <strong>@localizer["DUPLICATE_ERROR_HEADER"]</strong> @localizer["DUPLICATE_ERROR_MSG"]</div>
            break;
        case SaveResult.UnknownFailure:
            <div class="alert alert-danger" role="alert"> <strong>@localizer["UNKNOWN_ERROR_HEADER"]</strong> @localizer["UNKNOWN_ERROR_MSG"]</div>
            break;
    }
}

<h2>@localizer["ADD_NEW_CULTURE"]</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Add">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsSupported" /> @Html.DisplayNameFor(model => model.IsSupported)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="@localizer["CREATE"]" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
